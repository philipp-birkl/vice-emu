------------------------------------------------
macOS builds require that Homebrew be installed:
------------------------------------------------

#
# Install Xcode from the app store, and make sure Xcode CLI tools
# are installed and licenses agreed.
#

xcode-select --install
sudo xcodebuild -license accept

#
# Install Homebrew if not already installed, see https://brew.sh but if you are lazy:
#

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"


------------------------------------------------------------
Then if you just want to run the latest development version:
------------------------------------------------------------

#
# Keep in mind that trunk may have moved on and require that
# the brew formula be updated before it will work. In that
# case you'll want to use brew to fetch build deps and then
# build a checkout yourself (see below).
#
# But if brew formula in in sync with trunk:
#

brew install --HEAD vice

#
# x64sc, x128 etc. are now installed in /usr/local/bin.
#
# To rebuild once trunk has moved on:
#

brew reinstall vice


------------------------------------------------------------------------------
Or, you can use Homebrew to fetch dependencies for building your own checkout:
------------------------------------------------------------------------------

brew install --only-dependencies --HEAD vice
export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
./autogen.sh
./configure --prefix=/usr/local --disable-hwscale
make -j install

#
# At this point you have x64sc, x128 etc. binaries in /usr/local/bin.
#
# These will not utilise OpenGL ...
#
# ... you can also build with OpenGL support, although at Gtk 3.24.8, the Gtk3 macOS OpenGL support
# "is still very much unstable and experimental; it has only recently been added, and requires
# more debugging from somebody who is familiar with both GL and Darwin/CoreGraphics."
#
# In practice this means that whilst scaling is hardware accelerated, the result is pulled back to
# the system memory and then re-rendered using old 2D API which is slow AF, possibly slower than
# software scaling on some systems.
#

brew install --only-dependencies --HEAD vice
brew install glew
export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
./autogen.sh
./configure --prefix=/usr/local
make -j install

#
# Finally, you can make a binary distribution.
#
# Please note that the result will not run on an older version of macOS.
# It remains to be tested whether building on an older macOS results in
# a build that will run on a newer version of macOS.
#
# For compatibility with other systems you should rebuild with
# --enable-arch=no to configure.
#
# You'll also need platypus for creating the app bundles.
#

brew install platypus

#
# And then it's just:
#

make bindist

#
# Or to make a DMG:
#

make bindistzip

#
# The binary distributions are not currently signed with an apple developer ID
# and therefore not that easy to run on other macs due to gatekeeper.
#


----------------------------------------------------
Previous macports based instuctions - not supported:
----------------------------------------------------

FIXME: this should be much more detailed :)

the following requires macports, and perhaps some more libs (libjpeg) need to be
installed:

sudo port install gdk-pixbuf2 +quartz
sudo port install gtk3 +quartz

svn co https://svn.code.sf.net/p/vice-emu/code/trunk vice-src


cd vice-src/vice
./autogen.sh
awk '!/docsdir/' src/arch/gtk3/archdep.c > temp && mv temp src/arch/gtk3/archdep.c
./configure CXXFLAGS='-std=c++0x' --enable-native-gtk3ui
make -j
cp -r data/{C64,DRIVES,PRINTER} ~/.config/vice
cp -r src/arch/gtk3/data/vice.gresource* ~/.config/vice
./src/x64sc

then switch from resid to fastsid 
